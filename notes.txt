github repo => https://github.com/SangeethaShanmugm

extensions

>> Prettier - Code formatter
>> Spell check
>> vscode-icons
>> gitlens
>> githistory
>> auto rename tag
>> auto close tag


Github and vs connection
---------------------------
https://git-scm.com/downloads => download gitbash 

Set your username: git config --global user.name "FIRST_NAME LAST_NAME"
Set your email address: git config --global user.email "MY_NAME@example.com"


Express
-------------

Framework

sails, hapijs => alternative Framework for Express



Template engine => tool to write html Code

advantages
--------------

1. read & maintain
2. single template for multiple pages
3. productivity
4. max client processing

handlebar, EJS => embedded JS, Vash


Database
-------------

store data 

evolution of db 

flat-file system => object relational system

IBM = >1970 => relational database model => Edger Codd => table

RDBMS => 1980 & 1990


relational database ||  structured => SQL, mySQL, Oracle, POstgresSQL, SQL Server, Microsoft SQL Server, SQLLite => table => rows & columns

non-relational database ||  unstructured => Mongodb, Cassandra, CouchDB,Redis

DBMS => software => Oracle, MySQL Workbench

ACID property


columns => fields
row => record


Non-relational database || Mongodb
======================================

>>No Schema => blueprint of a data / shape of data 
>>Flexible schema => normal key, different key, extra key
[{
    name:"jack",
    age:20
},
{
    name:"john",
    age:25
},
{
    name:"peter",
    how_many_years_old:30
},
{
    name:"peter",
    how_many_years_old:30,
    address:"street 2"
}
]

name    age   email
jack    20
john    25   john@gmail.com

>> How data is stored in mongodb? => SMart & efficient way to store => BSON(Binary JSON) => store
 => retrieve  => JSON
 => 1 row => 1 object({}) =>  document {}
 => table => collection  
 => Emdedded document => nested => one doc {} => 100 levels of document => 16 mb of data  => 10,000 lines of text

 object id => next